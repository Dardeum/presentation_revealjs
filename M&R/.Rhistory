pivot_longer(-year, names_to = "technique", values_to = "count") %>%
select(-year) %>%
arrange(desc(count))
names(techniques_2023)
techniques_2023$technique
techniques_2023 %>%
head(10)
techniques_2023 %>%
head(10)
# Sum the number of techniques used in each article
list_articles_techniques$sum_techniques <- rowSums(list_articles_techniques[names(techniques)])
techniques_2023 %>%
head(10)
techniques_2023 %>%
head(10)
techniques_2023
techniques_2023$technique  %>%
head(10)
top_1O_techniques <- techniques_2023$technique  %>%
head(10)
top_1O_techniques
top_1O_techniques
library(wesanderson)
library(cowplot)
library(tidyverse)
library(ggstatsplot)
library(reticulate)
library(gt)
library(plotly)
library(countrycode)
library(htmlwidgets)
library(reactable)
library(wesanderson)
Royal2 <- wesanderson::wes_palette("Royal2", n = 10)
Royal2 <- wesanderson::wes_palette("GrandBudapest", n = 10)
palette_colors <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = Leximancer, color = "Leximancer")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = Word2Vec, color = "Word2Vec")) +
scale_color_manual(values = palette_colors) +
labs(
title = "Evolution of NLP Techniques in Marketing (Top 10 by 2023)",
subtitle = "Cumulative sum of the number of articles mentioning each technique",
x = "",
y = "Cumulative Number of Occurrences"
) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
# Afficher le graphe
ggplotly(fig)
# Créer le graphe
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = Leximancer, color = "Leximancer")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = Word2Vec, color = "Word2Vec")) +
scale_color_manual(values = palette_colors) +
labs(
title = "Evolution of NLP Techniques in Marketing (Top 10 by 2023)",
subtitle = "Cumulative sum of the number of articles mentioning each technique",
x = "",
y = "Cumulative Number of Occurrences"
) +
xlim(2009, 2023) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
# Afficher le graphe
ggplotly(fig)
library(ggrepel)
fig <- fig + geom_text_repel(
aes(x = specific_year_for_label, y = specific_value_for_label, label = "Technique Name", color = "Technique Name"),
direction = "y"
)
# pass the ggplot object to plotly
ggplotly(fig)
View(cumulative_techniques_year)
datapasta(cumulative_techniques_year)
install.packages("datapasta")
library(datapasta)
datapasta::clipboard_context(cumulative_techniques_year)
df_paste(cumulative_techniques_year)
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
Sentiment_Analysis = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig <- fig + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig)
# pass the ggplot object to plotly
ggplotly(fig)
# Afficher le graphe
print(fig)
# Créer le graphe ggplot
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
xlim(2010, 2023) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
Sentiment_Analysis = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig <- fig + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig)
# Afficher le graphe
print(fig)
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
)
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
Sentiment_Analysis = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig <- fig + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig)
palette_colors <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = Leximancer, color = "Leximancer")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = Word2Vec, color = "Word2Vec")) +
scale_color_manual(values = palette_colors) +
labs(
title = "Evolution of NLP Techniques in Marketing (Top 10 by 2023)",
subtitle = "Cumulative sum of the number of articles mentioning each technique",
x = "",
y = "Cumulative Number of Occurrences"
) +
xlim(2009, 2023) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
fig <- fig + geom_text_repel(
aes(x = specific_year_for_label, y = specific_value_for_label, label = "Technique Name", color = "Technique Name"),
direction = "y"
)
# pass the ggplot object to plotly
ggplotly(fig)
# Créer le graphe
fig <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = Leximancer, color = "Leximancer")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = Word2Vec, color = "Word2Vec")) +
scale_color_manual(values = palette_colors) +
labs(
title = "Evolution of NLP Techniques in Marketing (Top 10 by 2023)",
subtitle = "Cumulative sum of the number of articles mentioning each technique",
x = "",
y = "Cumulative Number of Occurrences"
) +
xlim(2009, 2023) +
theme_minimal() +
theme(legend.position = "bottom", legend.title = element_blank())
# pass the ggplot object to plotly
ggplotly(fig)
#other technique to plot with label on curves
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig2 <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
Sentiment_Analysis = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig2 <- fig2 + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig2)
# Créer le graphe ggplot
fig2 <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
xlim(2009, 2024) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
Sentiment_Analysis = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig2 <- fig2 + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig2)
#other technique to plot with label on curves
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig2 <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
xlim(2009, 2024) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
`Sentiment Analysis` = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig2 <- fig2 + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig2)
#other technique to plot with label on curves
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig2 <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
xlim(2009, 2024) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
`Sentiment‎Analysis` = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig2 <- fig2 + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig2)
#other technique to plot with label on curves
Royal2 <- wesanderson::wes_palette("GrandBudapest1", n = 10, type = "continuous")
# Créer le graphe ggplot
fig2 <- ggplot(cumulative_techniques_year, aes(x = year)) +
geom_line(aes(y = LIWC, color = "LIWC")) +
geom_line(aes(y = ChatGPT, color = "ChatGPT")) +
geom_line(aes(y = LLM, color = "LLM")) +
geom_line(aes(y = LDA, color = "LDA")) +
geom_line(aes(y = STM, color = "STM")) +
geom_line(aes(y = BERT, color = "BERT")) +
geom_line(aes(y = Sentiment_Analysis, color = "Sentiment Analysis")) +
geom_line(aes(y = Embeddings, color = "Embeddings")) +
geom_line(aes(y = Transformers, color = "Transformers")) +
geom_line(aes(y = RoBERTa, color = "RoBERTa")) +
scale_color_manual(values = Royal2) +
xlim(2009, 2024) +
labs(
title = "Evolution of NLP Techniques (Top 10 by 2023)",
subtitle = "Cumulative sum of articles mentioning each technique",
x = "Year",
y = "Cumulative Count"
) +
theme_minimal() +
theme(legend.position = "none") # Cacher la légende car les labels sont directement sur les courbes
# Ajouter les labels à la fin de chaque courbe avec geom_text_repel
labels_positions <- data.frame(
year = 2023, # Année de référence pour positionner les labels
LIWC = cumulative_techniques_year$LIWC[which.max(cumulative_techniques_year$year)],
ChatGPT = cumulative_techniques_year$ChatGPT[which.max(cumulative_techniques_year$year)],
LLM = cumulative_techniques_year$LLM[which.max(cumulative_techniques_year$year)],
LDA = cumulative_techniques_year$LDA[which.max(cumulative_techniques_year$year)],
STM = cumulative_techniques_year$STM[which.max(cumulative_techniques_year$year)],
BERT = cumulative_techniques_year$BERT[which.max(cumulative_techniques_year$year)],
"Sentiment Analysis" = cumulative_techniques_year$Sentiment_Analysis[which.max(cumulative_techniques_year$year)],
Embeddings = cumulative_techniques_year$Embeddings[which.max(cumulative_techniques_year$year)],
Transformers = cumulative_techniques_year$Transformers[which.max(cumulative_techniques_year$year)],
RoBERTa = cumulative_techniques_year$RoBERTa[which.max(cumulative_techniques_year$year)]
)
# Pour chaque technique, ajouter un label en utilisant geom_text_repel
for(technique in names(labels_positions)[-1]) {
fig2 <- fig2 + geom_text_repel(data = labels_positions,
aes_string(x = "year", y = technique, label = sprintf("'%s'", technique)),
nudge_x = 0.5, nudge_y = 0, force = 10)
}
# Afficher le graphe
print(fig2)
